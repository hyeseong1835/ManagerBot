<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Core</name>
    </assembly>
    <members>
        <member name="M:HS.Discord.Core.RawDiscordHttpClient.GetApiUrl(System.Int32)">
            <summary>
            https://discord.com/api/v{apiVersion}
            </summary>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:HS.Discord.Core.RawDiscordHttpClient.GetChannelMessagesRaw(System.UInt64)">
             <summary>
                 [ GET ] /channels/{channelId}/messages/{messageId} <br/>
                 채널에 있는 메시지를 검색합니다. <br/>
                 길드 채널에서 작업하는 경우, 이 엔드포인트는 현재 사용자에게 <c>VIEW_CHANNEL</c> 권한이 있어야 합니다. <br/>
                 채널이 음성 채널인 경우, <c>CONNECT</c> 권한도 있어야 합니다. <br/>
                 현재 사용자에게 채널에서 <c>READ_MESSAGE_HISTORY</c> 권한이 없는 경우 메시지가 반환되지 않습니다.
             </summary>
            
             <summary>
                 [ GET ] /channels/{channelId}/messages/{messageId} <br/>
                 Retrieves the messages in a channel. <br/>
                 If operating on a guild channel, this endpoint requires the current user to have the <c>VIEW_CHANNEL</c> permission. <br/>
                 If the channel is a voice channel, they must also have the <c>CONNECT</c> permission. <br/>
                 If the current user is missing the <c>READ_MESSAGE_HISTORY</c> permission in the channel, then no messages will be returned. <br/>
             </summary>
            
             <param name="channelId">
                 대상 채널 ID
             </param>
            
             <returns>
                 성공 시 메시지 객체 배열을 반환합니다.
             </returns>
        </member>
        <member name="M:HS.Discord.Core.RawDiscordHttpClient.GetChannelMessageRaw(System.UInt64,System.UInt64)">
             <summary>
                 [ GET ] /channels/<see href="https://discord.com/developers/docs/resources/channel#channel-object">{channel.id}</see>/messages/<see href="https://discord.com/developers/docs/resources/message#message-object">{message.id}</see> <br/>
                 채널에 있는 특정 메시지를 검색합니다. <br/>
                 길드 채널에서 작업하는 경우, 이 엔드포인트는 현재 사용자에게 <c>VIEW_CHANNEL</c> 및 <c>READ_MESSAGE_HISTORY</c> 권한이 있어야 합니다. <br/>
                 채널이 음성 채널인 경우, <c>CONNECT</c> 권한도 있어야 합니다.
             </summary>
            
             <summary>
                 [ GET ] /channels/<see href="https://discord.com/developers/docs/resources/channel#channel-object">{channel.id}</see>/messages <br/>
                 Retrieves a specific message in the channel. <br/>
                 If operating on a guild channel, this endpoint requires the current user to have the VIEW_CHANNEL and READ_MESSAGE_HISTORY permissions. <br/>
                 If the channel is a voice channel, they must also have the CONNECT permission.
             </summary>
            
             <param name="channelId">
                 대상 채널 ID
             </param>
             <param name="messageId">
                 대상 메시지 ID
             </param>
            
             <returns>
                 성공 시 <see href="https://discord.com/developers/docs/resources/message#message-object">메시지</see> 객체를 반환합니다.
             </returns>
        </member>
        <member name="M:HS.Discord.Core.RawDiscordHttpClient.CreateMessageRaw(System.UInt64,System.Net.Http.HttpContent)">
             <summary>
                 [POST] /channels/{channel.id}/messages <br/>
                 디스코드는 메시지 콘텐츠에서 유효하지 않은 유니코드 문자나 예기치 않은 메시지 형식을 유발하는 문자를 제거할 수 있습니다. <br/>
                 사용자 생성 문자열을 메시지 콘텐츠로 전달할 경우, 예기치 않은 동작을 방지하기 위해 데이터를 정제(sanitize)하고 <c>allowed_mentions</c>를 사용하는 것이 좋습니다. <br/>
                 길드 텍스트 채널 또는 DM 채널에 메시지를 전송합니다. <br/>
                 <see href="https://discord.com/developers/docs/events/gateway-events#message-create">Message Create</see> Gateway 이벤트가 발생합니다. <br/>
                 메시지를 올바르게 포맷하는 방법은 <see href="https://discord.com/developers/docs/reference#message-formatting">message formatting</see> 문서를 참조하십시오. <br/>
                 메시지를 답글(reply) 또는 전달(forward) 형태로 생성하려면, <c><see href="https://discord.com/developers/docs/resources/message#message-reference-structure">message_reference</see></c>를 포함할 수 있습니다. 필수 필드는 문서를 참조하십시오. <br/>
                 파일은 <see href="https://discord.com/developers/docs/reference#uploading-files">파일 업로드</see>에 설명된 대로 <c>multipart/form-data</c> 형식으로 첨부해야 합니다. <br/>
                 <br/>
                 제약 사항 <br/>
                 길드 채널에서 작동할 경우, 현재 사용자는 <c>SEND_MESSAGES</c> 권한이 있어야 합니다. <br/>
                 <c>tts</c>(text-to-speech)를 <c>true</c>로 설정하여 메시지를 보낼 경우, <c>SEND_TTS_MESSAGES</c> 권한이 필요합니다. <br/>
                 다른 메시지에 대한 답글로 메시지를 생성할 경우, <c>READ_MESSAGE_HISTORY</c> 권한이 필요합니다. <br/>
                 - 참조된 메시지는 존재해야 하며 시스템 메시지일 수 없습니다. <br/>
                 메시지 전송 시 최대 요청 크기는 25MiB입니다. <br/>
                 embed 객체의 경우, <c>type</c>(강제로 <c>rich</c>로 설정됨), <c>provider</c>, <c>video</c>, 이미지의 <c>height</c>, <c>width</c>, <c>proxy_url</c> 값을 제외한 모든 필드를 설정할 수 있습니다. <br/>
             </summary>
            
             <summary>
                 [ POST ] /channels/{channel.id}/messages <br/>
                 Discord may strip certain characters from message content, like invalid unicode characters or characters which cause unexpected message formatting. <br/>
                 If you are passing user-generated strings into message content, consider sanitizing the data to prevent unexpected behavior and using <c>allowed_mentions</c> to prevent unexpected mentions. <br/>
                 Post a message to a guild text or DM channel. <br/>
                 Returns a <see href="https://discord.com/developers/docs/resources/message#message-object">message</see> object. <br/>
                 Fires a <see href="https://discord.com/developers/docs/events/gateway-events#message-create">Message Create</see> Gateway event. <br/>
                 See <see href="https://discord.com/developers/docs/reference#message-formatting">message formatting</see> for more information on how to properly format messages. <br/>
                 To create a message as a reply or forward of another message, apps can include a <c><see href="https://discord.com/developers/docs/resources/message#message-reference-structure">message_reference</see></c>. Refer to the documentation for required fields. <br/>
                 Files must be attached using a <c>multipart/form-data</c> body as described in <see href="https://discord.com/developers/docs/reference#uploading-files">Uploading Files</see>. <br/>
                 <br/>
                 Limitations <br/>
                 When operating on a guild channel, the current user must have the <c>SEND_MESSAGES</c> permission. <br/>
                 When sending a message with <c>tts</c> (text-to-speech) set to <c>true</c>, the current user must have the <c>SEND_TTS_MESSAGES</c> permission. <br/>
                 When creating a message as a reply to another message, the current user must have the <c>READ_MESSAGE_HISTORY</c> permission. <br/>
                 - The referenced message must exist and cannot be a system message. <br/>
                 The maximum request size when sending a message is 25 MiB <br/>
                 For the embed object, you can set every field except <c>type</c> (it will be <c>rich</c> regardless of if you try to set it), <c>provider</c>, <c>video</c>, and any <c>height</c>, <c>width</c>, or <c>proxy_url</c> values for images. <br/>
             </summary>
            
             <param name="channelId">
                 대상 채널 ID
             </param>
             <param name="content">
                 송신할 Http 콘텐츠
             </param>
             <returns>
                 <see href="https://discord.com/developers/docs/resources/message#message-object">message</see> 객체를 반환합니다. <br/>
             </returns>
        </member>
        <member name="M:HS.Discord.Core.RawDiscordHttpClient.CreateMessage(System.UInt64,HS.Discord.Core.Resource.HttpContent.DiscordJsonHttpContent{HS.Discord.Core.Resource.HttpContent.CreateMessageData})">
            <inheritdoc cref="M:HS.Discord.Core.RawDiscordHttpClient.CreateMessage(System.UInt64,HS.Discord.Core.Resource.HttpContent.DiscordJsonHttpContent{HS.Discord.Core.Resource.HttpContent.CreateMessageData})"/>
            <param name="channelId">
                대상 채널 ID
            </param>
            <param name="content">
                송신할 Http 콘텐츠
            </param>
            <returns></returns>
        </member>
        <member name="M:HS.Discord.Core.Resource.HttpContent.DiscordJsonHttpContent`1.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>
                SerializeToStream* 메서드는 CopyTo* 메서드에서 내부적으로 사용됩니다.
                이 메서드는 콘텐츠를 NetworkStream에 복사하는 데 사용됩니다.
            </summary>
            <param name="stream"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HS.Discord.Core.Resource.HttpContent.DiscordJsonHttpContent`1.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>
                SerializeToStreamAsync 오버로드를 CancellationToken으로 재정의합니다.
                콘텐츠 직렬화가 취소를 지원하는 경우, 그렇지 않으면 토큰이 삭제됩니다.
            </summary>
            <param name="stream"></param>
            <param name="context"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:HS.Discord.Core.Resource.HttpContent.DiscordJsonHttpContent`1.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>
                동기 지원이 필요한 드문 경우(예: HttpClient.Send에서 사용하는 동기 CopyTo)에는
                SerializeToStream의 동기 버전을 구현합니다.
            </summary>
            <param name="stream"></param>
            <param name="context"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="F:HS.Discord.Core.Resource.HttpContent.EmbedType.rich">
            <summary>
            embed 속성에서 렌더링된 일반 임베드
            </summary>
        </member>
        <member name="F:HS.Discord.Core.Resource.HttpContent.EmbedType.image">
            <summary>
            이미지 임베드
            </summary>
        </member>
        <member name="F:HS.Discord.Core.Resource.HttpContent.EmbedType.video">
            <summary>
            비디오 임베드
            </summary>
        </member>
        <member name="F:HS.Discord.Core.Resource.HttpContent.EmbedType.article">
            <summary>
            기사 임베드
            </summary>
        </member>
        <member name="F:HS.Discord.Core.Resource.HttpContent.EmbedType.link">
            <summary>
            링크 임베드
            </summary>
        </member>
        <member name="F:HS.Discord.Core.Resource.HttpContent.EmbedType.poll_result">
            <summary>
            여론조사 결과 임베드
            </summary>
        </member>
        <member name="F:HS.Discord.Core.Resource.HttpContent.CreateMessageData.content">
            <summary> 메시지 콘텐츠 (최대 2000자) <br/>
                      content, embeds, sticker_id, components, files[n] 또는 poll 중 하나 이상이 필요합니다. </summary>
        </member>
        <member name="M:HS.Discord.Core.Resource.HttpContent.StringJsonValue.#ctor(System.ReadOnlyMemory{System.Byte})">
            <summary>
            값을 연속된 바이트로서 할당합니다.
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:HS.Discord.Core.Resource.HttpContent.StringJsonValue.#ctor(System.ReadOnlyMemory{System.Char})">
            <summary>
            문자열 값을 연속된 UTF-16 문자로서 할당합니다. (성능상 바이트로 할당하는 것보다 느릴 수 있습니다.)
            </summary>
            <param name="chars"></param>
        </member>
        <member name="F:HS.Discord.Core.Resource.Response.GetGuildRoleResponse.name">
            <summary>
            역할의 이름입니다.
            </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.CROSSPOSTED">
            <summary> 이 메시지는 구독된 채널에 게시되었습니다. (채널 팔로잉) </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.IS_CROSSPOST">
            <summary> 이 메시지는 다른 채널의 메시지에서 유래되었습니다. (채널 팔로잉) </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.SUPPRESS_EMBEDS">
            <summary> 이 메시지를 직렬화할 때 어떠한 임베드도 포함하지 마십시오. </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.SOURCE_MESSAGE_DELETED">
            <summary> 이 크로스포스트에 대한 소스 메시지가 삭제되었습니다. (채널 팔로잉) </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.URGENT">
            <summary> 이 메시지는 긴급 메시지 시스템에서 왔습니다. </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.HAS_THREAD">
            <summary> 이 메시지에는 메시지와 동일한 ID를 가진 연관된 스레드가 있습니다. </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.EPHEMERAL">
            <summary> 이 메시지는 상호작용을 호출한 사용자에게만 표시됩니다. </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.LOADING">
            <summary> 이 메시지는 상호작용 응답이며 봇은 "생각 중"입니다. </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.FAILED_TO_MENTION_SOME_ROLES_IN_THREAD">
            <summary> 이 메시지는 일부 역할을 언급하지 못했고 해당 멤버를 스레드에 추가하지 못했습니다. </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.SUPPRESS_NOTIFICATIONS">
            <summary> 이 메시지는 푸시 및 데스크톱 알림을 트리거하지 않습니다. </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.IS_VOICE_MESSAGE">
            <summary> 이 메시지는 음성 메시지입니다. </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.HAS_SNAPSHOT">
            <summary> 이 메시지에는 스냅샷이 있습니다. (메시지 전달) </summary>
        </member>
        <member name="F:Discord.Core.Resource.MessageFlag.IS_COMPONENTS_V2">
            <summary> 완전한 구성 요소 기반 메시지를 생성할 수 있습니다. </summary>
        </member>
    </members>
</doc>
